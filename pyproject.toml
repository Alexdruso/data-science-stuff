[build-system]
requires = [
    "setuptools>=61.0",
    "wheel>=0.40.0",
    "setuptools_scm[toml]>=6.0",  # For versioning from SCM tags
    "tomli>=1.1",  # Needed for setuptools_scm
]
build-backend = "setuptools.build_meta"

[project]
name = "data-science-stuff"
dynamic = ["version"]  # Use SCM versioning
authors = [
  { name="Alessandro Sanvito", email="alessandro.sanvito@gmail.com" },
]
description = "My very own data science package."
readme = "README.md"
requires-python = ">=3.9,<3.12"
license = { file = "LICENSE" }
keywords = ["data-science", "machine-learning", "analytics"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scipy>=1.7.0",
    "matplotlib>=3.4.0,<4.0.0",
    "scikit-learn>=0.24.0",
    "jupyter>=1.0.0,<2.0.0",
    "seaborn>=0.12.0,<1.0.0",
    "kaggle>=1.5.0,<2.0.0",
    "polars>=0.19.0,<1.0.0",
    "pyarrow>=14.0.0,<15.0.0"
]

[project.optional-dependencies]
development = [
    "ruff>=0.1.0,<1.0.0",
    "pytest>=7.0.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-xdist>=3.0.0,<4.0.0",  # For parallel testing
    "pytest-mock>=3.0.0,<4.0.0",
    "mypy>=1.0.0,<2.0.0",
    "pre-commit>=3.0.0,<4.0.0",
    "scipy-stubs>=1.0.0,<2.0.0",
    "networkx-stubs>=0.0.1,<1.0.0",
    "microsoft-python-type-stubs@git+https://github.com/microsoft/python-type-stubs.git",
    "isort>=5.0.0,<6.0.0",
    "bandit>=1.7.0,<2.0.0",  # For security checks
    "safety>=2.0.0,<3.0.0",  # For dependency security checks
]

docs = [
    "sphinx>=7.0.0,<8.0.0",
    "sphinx-rtd-theme>=1.0.0,<2.0.0",
    "myst-parser>=2.0.0,<3.0.0",
]

[project.urls]
Documentation = "https://github.com/alexdruso/data-science-stuff/docs"
Source = "https://github.com/alexdruso/data-science-stuff"
Issues = "https://github.com/alexdruso/data-science-stuff/issues"
Changelog = "https://github.com/alexdruso/data-science-stuff/blob/main/CHANGELOG.md"

[tool.ruff]
# Basic configuration
target-version = "py39"
line-length = 88

# Enable Ruff's formatter
extend-select = ["F"]  # Enable Ruff's formatter

# Linting rules
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "S",   # flake8-bandit
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
    "COM", # flake8-commas
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T20", # flake8-print
    "PYI", # flake8-pyi
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PL",  # pylint
    "TRY", # tryceratops
    "RUF", # ruff-specific rules
]

ignore = [
    "E501",    # Line length handled by formatter
    "PLR0913", # Too many arguments to function call
]

# Formatting configuration
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.9"
strict = true
warn_unreachable = true
warn_unused_ignores = true
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true

disable_error_code = ["attr-defined"]

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --doctest-modules --cov=data_science_stuff --cov-report=xml --cov-report=term-missing"
testpaths = [
    "tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*", "*Test"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
branch = true
source = ["data_science_stuff"]
omit = [
    "tests/*",
    "**/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
omit = [
    "tests/*",
    "*.pyc",
    "__pycache__/*",
    "setup.py",
]
precision = 2
fail_under = 80

[tool.setuptools]
packages = { find = { include = ["data_mining*", "playground_series_s5e1*"] } }
package-data = { "data_science_stuff" = ["py.typed"] }

[tool.setuptools_scm]
write_to = "data_science_stuff/_version.py"
